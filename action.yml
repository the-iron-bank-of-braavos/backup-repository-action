name: 'Backup repository'
description: >
    Create a repository backup

inputs:
  token:
    description: >
      Personal access token (PAT) used to fetch the repository. Default: empty. This field is optional, required if app credentials are not defined.
    default: ${{ github.token }}
  source-repository:
    description: >
        Source repository.
    required: true
  target-repository:
    description: >
        Target repository name.
    required: true
  ref:
    description: >
        Repository hash to copy.
    required: true
  topics:
    description: >
        Topics to add on destination repository
    default: ''

runs:
  using: "composite"
  steps:
    - name: Clone repository
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.source-repository }}
        ref: ${{ inputs.ref }}
        token: ${{ inputs.token }}
    - run: |
        IFS='/'
        read -a repo <<< "${{ inputs.target-repository }}"
        curl -X POST -H "Authorization: token ${{ inputs.token }}" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/orgs/${repo[0]}/repos" -d '{"name": "'"${repo[1]}"'"}'
      shell: bash
    - run: |
        t=$( echo "${{ inputs.topics }}" | tr -d ' ')
        if [ ! -z "$t" ]; then
          curl -X PUT -H "Authorization: token ${{ inputs.token }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ inputs.target-repository }}/topics -d '{"names": ['"$(printf '"%s"\n' "${t//,/\",\"}")"']}'
        fi
      shell: bash
    - run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "<actions@github.com>"
        git remote add backup https://${{ inputs.token }}@github.com/${{ inputs.target-repository }}.git
        git push backup ${{ inputs.ref }}
      shell: bash
