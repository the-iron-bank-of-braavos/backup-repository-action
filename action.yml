name: 'Backup repository'
description: >
    Create a repository backup

inputs:
  token:
    description: >
        Personal access token (PAT) used to fetch the repository. Default: empty. This field is optional, required if app credentials are not defined.
    required: true
  source-repository:
    description: >
        Source repository.
    required: true
  target-repository:
    description: >
        Target repository name.
    required: true
  topics:
    description: >
        Topics to add on destination repository
    default: '["backup"]'

runs:
  using: "composite"
  steps:
    - name: Clone repository
      uses: actions/checkout@v2
    - run: |
        git clone --mirror https://${{ inputs.token }}@github.com/${{ inputs.source-repository }}.git tmp-repo
      shell: bash
    - run: |
        IFS='/'
        read -a repo <<< "${{ inputs.target-repository }}"
        export OWNER=${repo[0]}
        export REPO=${repo[1]}
        echo "Owner: $OWNER"
        echo "Repo: $REPO"
        echo "OWNER=$(echo ${repo[0]})" >> "$GITHUB_ENV"
        echo "REPO=$(echo ${repo[1]})" >> "$GITHUB_ENV"
        curl -X POST -H "Authorization: token ${{ inputs.token }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/orgs/${{env.OWNER}}/repos -d '{"name": ${{env.REPO}}}'
      shell: bash
    - run: |
        curl -X PUT -H "Authorization: token ${{ inputs.token }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ inputs.target-repository }}/topics -d '{"names": ${{ inputs.topics }}}'
      shell: bash
    - run: |
        cd tmp-repo
        git config user.name "GitHub Actions Bot"
        git config user.email "<actions@github.com>"
        git push --force --mirror https://${{ inputs.token }}@github.com/${{ inputs.target-repository }}.git
      shell: bash
